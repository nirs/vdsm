#!/bin/sh
if [ -z "$PYTHON_EXE" ]; then
    PYTHON_EXE="python2"
fi

export \
    LC_ALL=C \
    NOSE_LOGFORMAT='%(asctime)s %(levelname)-5s (%(threadName)s) [%(name)s] %(message)s (%(module)s:%(lineno)d)' \
    NOSE_VERBOSE=${NOSE_VERBOSE:-3} \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH="@top_srcdir@/lib:@top_srcdir@/vdsm:@top_srcdir@/client:@top_srcdir@/vdsm_api:$PYTHONPATH" \
    $NULL

"$PYTHON_EXE" @top_srcdir@/tests/testrunner.py --local-modules -A "type!='functional'" $@ &
runner_pid=$!

if [ -n "$TIMEOUT" ]; then
    (
        sleep $TIMEOUT
        echo
        echo "========================================================================"
        echo "=           Timeout completing tests - extracting stacktrace           ="
        echo "========================================================================"
        echo
        gdb -p $runner_pid --batch -ex "thread apply all py-bt"
        echo
        echo "========================================================================"
        echo "=                        Aborting tests                                ="
        echo "========================================================================"
        kill -KILL $runner_pid
        sleep 5
    ) &
    watcher_pid=$!
fi

wait $runner_pid
runner_status=$?

if [ -n "$TIMEOUT" ]; then
    kill -TERM $watcher_pid
fi

exit $runner_status
